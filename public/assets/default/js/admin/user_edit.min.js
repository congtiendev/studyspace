/******/ (() => { // webpackBootstrap
var __webpack_exports__ = {};
/*!*****************************************!*\
  !*** ./resources/js/admin/user_edit.js ***!
  \*****************************************/
function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }
function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
function _iterableToArrayLimit(arr, i) { var _i = null == arr ? null : "undefined" != typeof Symbol && arr[Symbol.iterator] || arr["@@iterator"]; if (null != _i) { var _s, _e, _x, _r, _arr = [], _n = !0, _d = !1; try { if (_x = (_i = _i.call(arr)).next, 0 === i) { if (Object(_i) !== _i) return; _n = !1; } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0); } catch (err) { _d = !0, _e = err; } finally { try { if (!_n && null != _i["return"] && (_r = _i["return"](), Object(_r) !== _r)) return; } finally { if (_d) throw _e; } } return _arr; } }
function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }
(function ($) {
  "use strict";

  $('body').on('change', '#banSwitch', function () {
    if (this.checked) {
      $('#banSection').removeClass('d-none');
    } else {
      $('#banSection').addClass('d-none');
    }
  });
  $('body').on('change', '.js-user-bank-input', function (e) {
    e.preventDefault();
    var $optionSelected = $(this).find("option:selected");
    var specifications = $optionSelected.attr('data-specifications');
    var $card = $('.js-bank-specifications-card');
    var html = '';
    if (specifications) {
      Object.entries(JSON.parse(specifications)).forEach(function (_ref, key) {
        var _ref2 = _slicedToArray(_ref, 2),
          index = _ref2[0],
          item = _ref2[1];
        html += '<div class="form-group">\n' + '         <label class="font-weight-500 text-dark-blue">' + item + '</label>\n' + '         <input type="text" name="bank_specifications[' + index + ']" value="" class="form-control"/>\n' + ' </div>';
      });
    }
    $card.html(html);
  });
  $('body').on('change', '#enable_registration_bonusSwitch', function () {
    var $field = $('.js-registration-bonus-field');
    if (this.checked) {
      $field.removeClass('d-none');
    } else {
      $field.addClass('d-none');
    }
  });
})(jQuery);
/******/ })()
;